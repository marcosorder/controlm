"use strict";
var api_1 = require("../../api");
var cli;
function doLogin(options) {
    try {
        cli.setupOptions(options);
        var env = cli.currentEnv;
        var credentials = new api_1.LoginCredentials(env.user, env.password);
        new api_1.SessionApi("", env.endPoint).doLogin(credentials).then(cli.successHandler).catch(cli.errorHandler);
    }
    catch (exception) {
        cli.errorHandler(exception);
    }
}
function doLogout(token, options, callback) {
    try {
        cli.setupOptions(options);
        var env = cli.currentEnv;
        var sessionApi = new api_1.SessionApi("", env.endPoint);
        cli.setApiKey(sessionApi, token);
        sessionApi.doLogout().then(cli.successHandler).catch(cli.errorHandler);
    }
    catch (exception) {
        cli.errorHandler(exception);
    }
}
function init(cliToUse) {
    cli = cliToUse;
    var sessionCategory = cli
        .category("session")
        .description("Manually maintain Control-M user sessions");
    sessionCategory.command("login")
        .description("Login to Control-M and return a session token that can later be used using the -t option")
        .option("-e, --environment <env>", "Use <env> environment for this command")
        .execute(doLogin)
        .usage(" ");
    sessionCategory.command("logout <token>")
        .description("Logout from the user session specified by the given token")
        .option("-e, --environment <env>", "Use <env> environment for this command")
        .execute(doLogout)
        .usage("<token>");
}
exports.init = init;
//# sourceMappingURL=session.js.map